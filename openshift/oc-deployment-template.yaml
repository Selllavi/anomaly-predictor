---
apiVersion: v1
kind: Template
metadata:
  name: anomaly-detector-deployment-template
  annotations:
    openshift.io/display-name: "anomaly detector"
    version: 0.1.0
  labels:
    application: ${APPLICATION_NAME}
    template: ${APPLICATION_NAME}-template
    app: ${APPLICATION_NAME}
parameters:
  - description: The name for application
    value: 'anomaly-detector-test'
    name: APPLICATION_NAME
    required: true
  - name: GIT_URI
    value: "https://github.com/Selllavi/anomaly-predictor.git"
    required: true
  - name: DEBUG_MODE
    description: "Enable verbose log for debugging"
    value: "False"
    required: false
  - name: PROMETEUS_URL
    description: "url for the prometheus host from where the metrics will be collected"
    required: true
  - name: PROMETEUS_ACCESS_TOKEN
    description: "Oauth token needed to connect to the prometheus host"
    required: false
  - name: METRICS_LIST
    description: "List of metrics (with labels), that will be collected from prometheus and predicted"
    required: true
    value: >
      "container_memory_usage_bytes{id='/'}"
  - name: RETRAINING_INTERVAL_MINUTES
    description: "How often should the anomaly detector retrain the model (in minutes)"
    required: true
    value: "18"
  - name: ROLLING_TRAINING_WINDOW_SIZE
    description: >
      "this will create a rolling data window on which the model will be trained.
       example: if set to 15d will train the model on past 15 days of data"
    required: true
    value: "18m"
  - name: OC_APP_IMAGE_NAME
    description: "name of the image that should be deployed"
    value: "anomaly-detector-image"
    required: true
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        deploymentConfig: ${APPLICATION_NAME}
        app: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentConfig: ${APPLICATION_NAME}
            app: ${APPLICATION_NAME}
        spec:
          containers:
            - env:
                - name: PROMETEUS_URL
                  value: "${PROMETEUS_URL}"
                - name: PROMETEUS_ACCESS_TOKEN
                  value: "${PROMETEUS_ACCESS_TOKEN}"
                - name: METRICS_LIST
                  value: "${METRICS_LIST}"
                - name: RETRAINING_INTERVAL_MINUTES
                  value: "${RETRAINING_INTERVAL_MINUTES}"
                - name: ROLLING_TRAINING_WINDOW_SIZE
                  value: "${ROLLING_TRAINING_WINDOW_SIZE}"
                - name: DEBUG_MODE
                  value: "${DEBUG_MODE}"
              image: ${APPLICATION_NAME}
              imagePullPolicy: IfNotPresent
              name: ${APPLICATION_NAME}
              resources:
                requests:
                  memory: 1Gi
                  cpu: "2"
                limits:
                  memory: 2Gi
                  cpu: "2"
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}-service
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        - port: 8087
          name: http
      selector:
        app: ${APPLICATION_NAME}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${APPLICATION_NAME}-route
      labels:
        app: ${APPLICATION_NAME}
    spec:
      to:
        kind: Service
        name: ${APPLICATION_NAME}-service
